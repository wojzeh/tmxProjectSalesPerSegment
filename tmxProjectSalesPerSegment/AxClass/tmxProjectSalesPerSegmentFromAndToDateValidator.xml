<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>tmxProjectSalesPerSegmentFromAndToDateValidator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LedgerReportFromAndToDateValidator</c> class is used to validate the
/// <c>From</c> and <c>To</c> date range values exposed on ledger reports.
/// </summary>
/// <remarks>
/// The date range will be validated for correctness and to prevent the user from 
/// requesting a range that crosses fiscal year boundaries in an effort to improve
/// the performance of ledger reports.
/// </remarks>
internal final class tmxProjectSalesPerSegmentFromAndToDateValidator
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    internal void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    internal boolean validate(TransDate _fromDate, TransDate _toDate)
    {
        return this.validateFromAndToDateNotNull(_fromDate, _toDate)
            && this.validateFromDateNotGreaterThanToDate(_fromDate, _toDate)
            ;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFromAndToDateForFiscalCalendar</Name>
				<Source><![CDATA[
    private boolean validateFromAndToDateForFiscalCalendar(TransDate _fromDate, TransDate _toDate)
    {
        FiscalCalendarRecId calendarRecId = Ledger::fiscalCalendar();

        TransDate fromDatePeriodStart = LedgerFiscalCalendar::findOpeningStartDateByDate(calendarRecId, _fromDate);
        TransDate toDatePeriodStart = LedgerFiscalCalendar::findOpeningStartDateByDate(calendarRecId, _toDate);

        return this.validateDateExistsInFiscalCalendar(calendarRecId, fromDatePeriodStart, _fromDate)
            && this.validateDateExistsInFiscalCalendar(calendarRecId, toDatePeriodStart, _toDate)
            && this.validateFromAndToDateAreInSameFiscalYear(
                    fromDatePeriodStart,
                    toDatePeriodStart);

    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFromAndToDateNotNull</Name>
				<Source><![CDATA[
    private boolean validateFromAndToDateNotNull(TransDate _fromDate, TransDate _toDate)
    {
        if (_fromDate == dateNull() || _toDate == dateNull())
        {
            return checkFailed("@GeneralLedger:LedgerReportDateCriteriaRequired");
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFromDateNotGreaterThanToDate</Name>
				<Source><![CDATA[
    private boolean validateFromDateNotGreaterThanToDate(TransDate _fromDate, TransDate _toDate)
    {
        if (_fromDate > _toDate)
        {
            return checkFailed(strFmt("@SYS55013", date2StrUsr(_fromDate, DateFlags::FormatAll), date2StrUsr(_toDate, DateFlags::FormatAll)));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDateExistsInFiscalCalendar</Name>
				<Source><![CDATA[
    private boolean validateDateExistsInFiscalCalendar(FiscalCalendarRecId _calendarRecId, TransDate _periodStart, TransDate _date)
    {
        if (_periodStart == dateNull()
            || !FiscalCalendarYear::findYearByCalendarDate(_calendarRecId, _date))
        {
            return checkFailed(strFmt("@Ledger:ErrorMessageFiscalPeriodMissing", date2StrUsr(_date, DateFlags::FormatAll)));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFromAndToDateAreInSameFiscalYear</Name>
				<Source><![CDATA[
    private boolean validateFromAndToDateAreInSameFiscalYear(TransDate _fromDatePeriodStart, TransDate _toDatePeriodStart)
    {
        if (_fromDatePeriodStart != _toDatePeriodStart)
        {
            return checkFailed(strFmt("@SYS28745", year(_fromDatePeriodStart), year(_toDatePeriodStart)));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateReportFromAndToDate</Name>
				<Source><![CDATA[
    internal static boolean validateReportFromAndToDate(TransDate _fromDate, TransDate _toDate)
    {
        tmxProjectSalesPerSegmentFromAndToDateValidator fromToDateValidator = new tmxProjectSalesPerSegmentFromAndToDateValidator();

        return fromToDateValidator.validate(_fromDate, _toDate);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>