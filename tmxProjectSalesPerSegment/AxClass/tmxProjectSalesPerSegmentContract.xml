<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>tmxProjectSalesPerSegmentContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for Dimension service.
/// </summary>
/// <remarks>
/// This is the Data Contract class for the Dimension service.
/// </remarks>
[DataContract]
[SysOperationGroup('Grouping', "@AccountsReceivable:Details", '1')]
[SysOperationGroup('Date', "@SYS7402", '2')]
[SysOperationContractProcessing(classstr(tmxProjectSalesPerSegmentUIBuilder), SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly)]

class tmxProjectSalesPerSegmentContract implements SysOperationValidatable
{
    boolean                             groupedByMonth;
    TransDate                           fromDate;
    TransDate                           toDate;
    str                                 reportTitle;
    Name                                primaryDimensionFocus;
    str                                 reportCompany;
    str                                 legalEntityOptionsStr;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmGroupedByMonth</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter groupByMonth.
    /// </summary>
    /// <param name="_parm">
    /// The new value of the datacontract parameter GroupedByMonth; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter GroupedByMonth.
    /// </returns>
    [
        DataMember('GroupedByMonth'),
        SysOperationLabel(literalstr("@tmxProjectSalesPerSegment:SalesBySegmentReportByMonth")),
        SysOperationHelpText(literalstr("@tmxProjectSalesPerSegment:SalesBySegmentReportTypeHelp")),
        SysOperationGroupMember('Grouping'),
        SysOperationDisplayOrder('1')
    ]
    public boolean parmGroupedByMonth(boolean _parm = groupedByMonth)
    {
        groupedByMonth  = _parm;
        return groupedByMonth;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter fromdate.
    /// </summary>
    /// <param name="_fromDate">
    /// The new value of the datacontract parameter fromdate; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter fromdate.
    /// </returns>
    [
        DataMember('FromDate'),
        SysOperationLabel(literalstr("@SYS5209")),
        SysOperationHelpText(literalstr("@SYS67")),
        SysOperationGroupMember('Date'),
        SysOperationDisplayOrder('1')
    ]
    public TransDate parmFromDate(TransDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter toDate.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the datacontract parameter toDate; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter toDate.
    /// </returns>
    [
        DataMember('ToDate'),
        SysOperationLabel(literalstr("@SYS14656")),
        SysOperationHelpText(literalstr("@SYS67")),
        SysOperationGroupMember('Date'),
        SysOperationDisplayOrder('2')
    ]
    public TransDate parmToDate(TransDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrimaryDimensionFocus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the primary financial dimension focus of data contract parameter.
    /// </summary>
    /// <param name="_primaryDimensionFocus">
    /// The new value of the primary financial dimension focus; optional.
    /// </param>
    /// <returns>
    /// The current value of the primary financial dimension focus data contract parameter.
    /// </returns>
    [
        DataMember('PrimaryDimensionFocus')
    ]
    public Name parmPrimaryDimensionFocus(Name _primaryDimensionFocus = primaryDimensionFocus)
    {
        primaryDimensionFocus = _primaryDimensionFocus;
        return primaryDimensionFocus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportTitle</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>reportTitle</c> data contract parameter.
    /// </summary>
    /// <param name="_reportTitle">
    ///    The new value of the <c>reportTitle</c> data contract parameter.
    /// </param>
    /// <returns>
    ///    The current value of the <c>reportTitle</c> data contract parameter.
    /// </returns>
    [
        DataMember('ReportTitle')
    ]
    public Str60 parmReportTitle(str _reportTitle = reportTitle)
    {
        reportTitle  = _reportTitle;
        return reportTitle;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportCompany</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>reportCompany</c> data contract parameter.
    /// </summary>
    /// <param name="_parm">
    ///    The new value of the <c>reportCompany</c> data contract parameter.
    /// </param>
    /// <returns>
    ///    The current value of the <c>reportCompany</c> data contract parameter.
    /// </returns>
    [
        DataMember('ReportCompany')
    ]
    public Str60 parmReportCompany(str _parm = reportCompany)
    {
        reportCompany  = _parm;
        return reportCompany;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLegalEntityOptions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Legal options
    /// </summary>
    /// <param name = "_legalEntityOptions">str</param>
    /// <returns>str</returns>
    [
        DataMember('legalEntityOptions')
        ,
        SysOperationGroupMember('Grouping'),
        SysOperationDisplayOrder('5')
    ]
    public str parmLegalEntityOptions(str _legalEntityOptions = legalEntityOptionsStr)
    {
        legalEntityOptionsStr = _legalEntityOptions;

        return legalEntityOptionsStr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the parameters.
    /// </summary>
    /// <returns>
    /// true if all report parameters are valid; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        isValid = tmxProjectSalesPerSegmentFromAndToDateValidator::validateReportFromAndToDate(this.fromDate, this.toDate);

        RecId primaryFocusRecId = DimensionAttribute::findByName(this.parmPrimaryDimensionFocus()).RecId;

        if (!primaryFocusRecId)
        {
            isValid = checkFailed(strFmt("@SYS333565", this.parmPrimaryDimensionFocus()));
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>